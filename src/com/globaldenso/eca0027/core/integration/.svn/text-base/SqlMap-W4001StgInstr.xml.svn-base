<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
 * SqlMap-W4001StgInstr.xml
 *
 * SqlMap file of W4001StgInstrDao.
 * W4001StgInstrDaoのSqlMapファイルです。
 *
 * Copyright (c) 2014 DENSO CORPORATION. All rights reserved.
-->
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="W4001StgInstr">

    <!-- Alias definition of the Domain -->
    <!-- Domainの別名定義 -->
    <typeAlias alias="W4001StgInstrDomain"
        type="com.globaldenso.eca0027.core.business.domain.W4001StgInstrDomain" />
    <typeAlias alias="W4001PltzDomain"
        type="com.globaldenso.eca0027.core.business.domain.W4001PltzDomain" />
    <typeAlias alias="W4001StgInstrCriteriaDomain"
        type="com.globaldenso.eca0027.core.business.domain.criteria.W4001StgInstrCriteriaDomain" />
    <typeAlias alias="W4001PltzCriteriaDomain"
        type="com.globaldenso.eca0027.core.business.domain.criteria.W4001PltzCriteriaDomain" />

    <!-- Staging instruction Main / Search ResultMap -->
    <!-- 荷揃え指示Main / Search ResultMap -->
    <resultMap id="W4001StgInstrDomain_SearchForPagingOnMainSearch" class="W4001StgInstrDomain">
        <result property="whCompCd" column="WH_COMP_CD" />
        <result property="whCd" column="WH_CD" />
        <result property="trnsCd" column="TRNS_CD" />
        <result property="containerSortingKey" column="CONTAINER_SORTING_KEY" />
        <result property="containerLooseTyp" column="CONTAINER_LOOSE_TYP" />
        <result property="customTimingTyp" column="CUSTOM_TIMING_TYP" />
        <result property="shipperCd" column="SHIPPER_CD" />
        <result property="stgInstrNo" column="STG_INSTR_NO" />
        <result property="stgInstrStatus" column="STG_INSTR_STATUS" />
        <result property="etd" column="ETD" />
        <result property="stgInstrDt" column="STG_INSTR_DT" />
        <result property="workedDt" column="WORKED_DT" />
        <result property="stgInstrIssuerNm" column="STG_INSTR_ISSUER_NM" />
        <result property="workedMethValue" column="VALUE" />
    </resultMap>

    <!-- Staging instruction Create / Search ResultMap -->
    <!-- 荷揃え指示Create / Search ResultMap -->
    <resultMap id="W4001PltzDomain_SearchForPagingOnCreateSearch" class="W4001PltzDomain">
        <result property="mainMark" column="MAIN_MARK" />
        <result property="shipToCd" column="SHIP_TO_CD" />
        <result property="weightUnit" column="WEIGHT_UNIT" />
        <result property="grossWeight" column="GROSS_WEIGHT" />
        <result property="volumeUnit" column="VOLUME_UNIT" />
        <result property="volume" column="VOLUME" />
        <result property="dueDt" column="DUE_DT" />
        <result property="loadingCd" column="LOADING_CD" />
        <result property="dngrItemFlg" column="DNGR_ITEM_FLG" />
        <result property="lastTrRcvDt" column="LAST_TR_RCV_DT" />
        <result property="expRequestNo" column="EXP_REQUEST_NO" />
        <result property="disabledFlg" column="DISABLED_FLG" />
    </resultMap>

    <!-- Staging instruction Register / Search(detail) ResultMap -->
    <!-- 荷揃え指示Register / Search(明細) ResultMap -->
    <resultMap id="W4001PltzDomain_SearchOnRegisterInit" class="W4001PltzDomain">
        <result property="mainMark" column="MAIN_MARK" />
        <result property="shipToCd" column="SHIP_TO_CD" />
        <result property="weightUnit" column="PLTZ_WEIGHT_UNIT" />
        <result property="grossWeight" column="PLTZ_GROSS_WEIGHT" />
        <result property="volumeUnit" column="PLTZ_VOLUME_UNIT" />
        <result property="volume" column="PLTZ_VOLUME" />
        <result property="dueDt" column="DUE_DT" />
        <result property="loadingCd" column="LOADING_CD" />
        <result property="dngrItemFlg" column="DNGR_ITEM_FLG" />
        <result property="lastTrRcvDt" column="LAST_TR_RCV_DT" />
        <result property="expRequestNo" column="EXP_REQUEST_NO" />
        <result property="comUpdateTimestamp" column="PLTZ_COM_UPDATE_TIMESTAMP" />
        <result property="auth" column="AUTH" />
    </resultMap>

    <!-- Staging instruction Register / Search - from Main ResultMap -->
    <!-- 荷揃え指示Register / Search - from Main ResultMap -->
    <resultMap id="W4001StgInstrDomain_SearchOnRegisterInit" class="W4001StgInstrDomain" groupBy="stgInstrNo">
        <result property="stgInstrNo" column="STG_INSTR_NO" />
        <result property="whCompCd" column="WH_COMP_CD" />
        <result property="whCd" column="WH_CD" />
        <result property="trnsCd" column="TRNS_CD" />
        <result property="containerSortingKey" column="CONTAINER_SORTING_KEY" />
        <result property="containerLooseTyp" column="CONTAINER_LOOSE_TYP" />
        <result property="customTimingTyp" column="CUSTOM_TIMING_TYP" />
        <result property="shipperCd" column="SHIPPER_CD" />
        <result property="stgInstrStatus" column="STG_INSTR_STATUS" />
        <result property="etd" column="ETD" />
        <result property="carrierCompCd" column="CARRIER_COMP_CD" />
        <result property="pkgQty" column="PKG_QTY" />
        <result property="grossWeight" column="GROSS_WEIGHT" />
        <result property="weightUnit" column="WEIGHT_UNIT" />
        <result property="volume" column="VOLUME" />
        <result property="volumeUnit" column="VOLUME_UNIT" />
        <result property="stgInstrDt" column="STG_INSTR_DT" />
        <result property="stgInstrIssuerNm" column="STG_INSTR_ISSUER_NM" />
        <result property="workedDt" column="WORKED_DT" />
        <result property="workedIssuerNm" column="WORKED_ISSUER_NM" />
        <result property="workedMethValue" column="VALUE" />
        <result property="comUpdateTimestamp" column="COM_UPDATE_TIMESTAMP" />
        <result property="pltzDomainList" resultMap="W4001StgInstr.W4001PltzDomain_SearchOnRegisterInit" javaType="java.util.ArrayList" />
    </resultMap>

    <!-- Staging instruction Register / Init - from Create Weight summary acquisition of weight per unit ResultMap -->
    <!-- 荷揃え指示Register / Init - from Create 重量単位ごとの重量サマリ取得 ResultMap -->
    <resultMap id="W4001PltzDomain_SearchOnRegisterInitByWeightSummary" class="W4001PltzDomain">
        <result property="weightUnit" column="WEIGHT_UNIT" />
        <result property="grossWeight" column="GROSS_WEIGHT" />
    </resultMap>

    <!-- Staging instruction Register / Init - from Create Summary volume acquisition of volume per unit ResultMap -->
    <!-- 荷揃え指示Register / Init - from Create 容積単位ごとの容積サマリ取得 ResultMap -->
    <resultMap id="W4001PltzDomain_SearchOnRegisterInitByVolumeSummary" class="W4001PltzDomain">
        <result property="volumeUnit" column="VOLUME_UNIT" />
        <result property="volume" column="VOLUME" />
    </resultMap>

    <!-- Staging instruction Register / Register - Palletize lock & check ResultMap -->
    <!-- 荷揃え指示Register / Register - パレタイズロック&チェック用 ResultMap -->
    <resultMap id="W4001PltzDomain_LockTtPltzByMainMarkListNoWait" class="W4001PltzDomain">
        <result property="mainMark" column="MAIN_MARK" />
        <result property="pltzStatus" column="PLTZ_STATUS" />
        <result property="lastTrStatus" column="LAST_TR_STATUS" />
        <result property="pltzInstrStatus" column="PLTZ_INSTR_STATUS" />
    </resultMap>

    <!-- Staging instruction Register / Register - Palletize export request for unit check ResultMap -->
    <!-- 荷揃え指示Register / Register - パレタイズ輸出依頼単位チェック用 ResultMap -->
    <resultMap id="W4001PltzDomain_SearchTtPltzByExpReq" class="W4001PltzDomain">
        <result property="expRequestNo" column="EXP_REQUEST_NO" />
        <result property="expRequestAllCmlIssuedFlg" column="EXP_REQUEST_ALL_CML_ISSUED_FLG" />
        <result property="createFlg" column="CREATE_FLG" />
    </resultMap>

    <!-- for paging -->
    <!-- ページング -->
    <sql id="Paging_Begin">
        select * from (select XX.*, ROWNUM ROWNUM1 from (
    </sql>
    <sql id="Paging_End">
        ) XX ) where ROWNUM1  between #rowNumFrom# and #rowNumTo#
    </sql>

    <!-- ====================================================================== -->
    <!-- Staging instruction Main / Search                                      -->
    <!-- 荷揃え指示Main / Search                                                -->
    <!-- ====================================================================== -->

    <sql id="Select_Count_MainSearch">
        select /* SqlMap-W4001StgInstr.SearchCountForPagingOnMainSearch */
            count(ROWNUM)
    </sql>

    <sql id="Select_MainSearch">
        select /* SqlMap-W4001StgInstr.SearchForPagingOnMainSearch */
                T1.WH_COMP_CD
            ,   T1.WH_CD
            ,   T1.TRNS_CD
            ,   T1.CONTAINER_SORTING_KEY
            ,   T1.CONTAINER_LOOSE_TYP
            ,   T1.CUSTOM_TIMING_TYP
            ,   T1.SHIPPER_CD
            ,   T1.STG_INSTR_NO
            ,   T1.STG_INSTR_STATUS
            ,   T1.ETD
            ,   T1.STG_INSTR_DT
            ,   T1.WORKED_DT
            ,   T1.STG_INSTR_ISSUER_NM
            ,   T1.VALUE
    </sql>
    <sql id="From_MainSearch">
        from
            (
                select distinct
                        T1.WH_COMP_CD
                    ,   T1.WH_CD
                    ,   T1.TRNS_CD
                    ,   T1.CONTAINER_SORTING_KEY
                    ,   T1.CONTAINER_LOOSE_TYP
                    ,   T1.CUSTOM_TIMING_TYP
                    ,   T1.SHIPPER_CD
                    ,   T1.STG_INSTR_NO
                    ,   T1.STG_INSTR_STATUS
                    ,   T1.ETD
                    ,   T1.STG_INSTR_DT
                    ,   T1.WORKED_DT
                    ,   T1.STG_INSTR_ISSUER_NM
                    ,   M1.VALUE
                from
                        TT_STG_INSTR T1
                    ,   TT_PLTZ T2
                    ,   TM_CD M1
                where
                        T1.STG_INSTR_NO = T2.STG_INSTR_NO
                    and T1.WORKED_METH_TYP = M1.CD(+)
                    and M1.CD_TYP(+) = '46'
                    and M1.LNG_CD(+) = #languageCd#
                    <isNotEmpty prepend="and" property="whCompCd">
                        T1.WH_COMP_CD = #whCompCd#
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="whCd">
                        T1.WH_CD = #whCd#
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="trnsCd">
                        T1.TRNS_CD = #trnsCd#
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="containerSortingKey">
                        T1.CONTAINER_SORTING_KEY like concat(#containerSortingKey#, '%')
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="containerLooseTyp">
                        T1.CONTAINER_LOOSE_TYP = #containerLooseTyp#
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="shipperCd">
                        T1.SHIPPER_CD = #shipperCd#
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="stgInstrNo">
                        T1.STG_INSTR_NO like concat(#stgInstrNo#, '%')
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="customTimingTyp">
                        T1.CUSTOM_TIMING_TYP = #customTimingTyp#
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="stgInstrDtFrom">
                        T1.STG_INSTR_DT <![CDATA[ >= ]]> #stgInstrDtFrom#
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="stgInstrDtTo">
                        T1.STG_INSTR_DT <![CDATA[ < ]]> #stgInstrDtTo# + 1
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="stgInstrStatus">
                        T1.STG_INSTR_STATUS = #stgInstrStatus#
                    </isNotEmpty>
                    <isEqual prepend="and" property="stgInstrIssuerId" compareValue="1">
                        T1.STG_INSTR_ISSUER_ID = #loginUserDscId#
                    </isEqual>
                    <isEqual prepend="and" property="workedId" compareValue="1">
                        T1.WORKED_ID = #loginUserDscId#
                    </isEqual>
                    <isNotEmpty prepend="and" property="mainMark">
                        T2.MAIN_MARK like concat(#mainMark#, '%')
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="expRequestNo">
                        T2.EXP_REQUEST_NO like concat(#expRequestNo#, '%')
                    </isNotEmpty>
            ) T1
        <!-- If no RegisterAll, no BrowseAll -->
        <!-- RegisterAllなし、BrowseAllなしの場合 -->
        <isNotEmpty property="userAuthList" prepend=",">
            (
                select
                        A1.STG_INSTR_NO
                    ,   max(
                            case
                                <iterate property="userAuthList">
                                    when A1.SHIPPER_CD = #userAuthList[].authMgtComp# and A2.PLNT_CD = #userAuthList[].procMfgDivCd#
                                        then #userAuthList[].authority#
                                </iterate>
                                else '0'
                            end
                        ) AUTH_PLNT
                from
                        TT_PLTZ A1
                    ,   TT_PLTZ_ITEM A2
                where 
                        A1.MAIN_MARK = A2.MAIN_MARK
                    and A2.PLNT_CD is not NULL
                group by
                    A1.STG_INSTR_NO
            ) A1
        </isNotEmpty>
    </sql>
    <sql id="Where_MainSearch">
        where
            exists (
                select 'x'
                from
                    TT_PLTZ A1,
                    (
                        select COMP_CD
                        from TM_NXS_COMP
                        where SERVER_ID = #serverId#
                    ) A2
                where
                        T1.STG_INSTR_NO = A1.STG_INSTR_NO
                    and A1.SHIPPER_CD = A2.COMP_CD(+)
                having
                    min(decode(A2.COMP_CD, NULL, 0, 1)) = 1
            )
        <!-- If no RegisterAll, no BrowseAll -->
        <!-- RegisterAllなし、BrowseAllなしの場合 -->
        <isNotEmpty property="userAuthList" prepend="and">
                T1.STG_INSTR_NO = A1.STG_INSTR_NO
            and A1.AUTH_PLNT <![CDATA[ >= ]]> '1'
        </isNotEmpty>
    </sql>
    <sql id="Orderby_MainSearch">
        order by
                T1.TRNS_CD asc
            ,   T1.CONTAINER_SORTING_KEY asc
            ,   T1.CONTAINER_LOOSE_TYP asc
            ,   T1.CUSTOM_TIMING_TYP asc
            ,   T1.SHIPPER_CD asc
            ,   T1.STG_INSTR_NO desc
    </sql>

    <!-- Search SQL statement (Main / Search - Count of staging instruction) -->
    <!-- 検索 SQL文 (Main / Search - 荷揃え指示件数) -->
    <select id="SearchCountForPagingOnMainSearch" parameterClass="W4001StgInstrCriteriaDomain" resultClass="java.lang.Integer">
        <include refid="Select_Count_MainSearch" />
        <include refid="From_MainSearch" />
        <include refid="Where_MainSearch" />
    </select>

    <!-- Search SQL statement (Main / Search - Staging instruction search) -->
    <!-- 検索 SQL文 (Main / Search - 荷揃え指示検索) -->
    <select id="SearchForPagingOnMainSearch" parameterClass="W4001StgInstrCriteriaDomain" resultMap="W4001StgInstrDomain_SearchForPagingOnMainSearch">
        <include refid="Paging_Begin" />
        <include refid="Select_MainSearch" />
        <include refid="From_MainSearch" />
        <include refid="Where_MainSearch" />
        <include refid="Orderby_MainSearch" />
        <include refid="Paging_End" />
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Create / Search                                    -->
    <!-- 荷揃え指示Create / Search                                              -->
    <!-- ====================================================================== -->

    <sql id="Select_Count_CreateSearch">
        select /* SqlMap-W4001StgInstr.SearchCountForPagingOnCreateSearch */
            count(ROWNUM)
    </sql>

    <sql id="Select_CreateSearch">
        select /* SqlMap-W4001StgInstr.SearchForPagingOnCreateSearch */
                T1.MAIN_MARK
            ,   T1.SHIP_TO_CD
            ,   T1.WEIGHT_UNIT
            ,   T1.GROSS_WEIGHT
            ,   T1.VOLUME_UNIT
            ,   T1.VOLUME
            ,   T1.DUE_DT
            ,   T1.LOADING_CD
            ,   T1.DNGR_ITEM_FLG
            ,   T1.LAST_TR_RCV_DT
            ,   T1.EXP_REQUEST_NO
            ,   decode(W1.MAIN_MARK, NULL, 'N', 'Y') DISABLED_FLG
    </sql>
    <sql id="From_CreateSearch">
        from
                TT_PLTZ T1
            ,   TW_STG_INSTR W1
    </sql>
    <sql id="Where_CreateSearch">
        where
                T1.MAIN_MARK = W1.MAIN_MARK(+)
            and T1.CUR_WH_COMP_CD = #whCompCd#
            and T1.CUR_WH_CD = #whCd#
            and T1.TRNS_CD = #trnsCd#
            and T1.CONTAINER_SORTING_KEY = #containerSortingKey#
            and T1.SHIPPER_CD = #shipperCd#
            and T1.CUSTOM_TIMING_TYP = #customTimingTyp#
            and T1.CONTAINER_LOOSE_TYP = #containerLooseTyp#
            <isNotEmpty prepend="and" property="loadingCd">
                T1.LOADING_CD = #loadingCd#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="shipToCd">
                T1.SHIP_TO_CD like concat(#shipToCd#, '%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="dngrItemFlg">
                T1.DNGR_ITEM_FLG = #dngrItemFlg#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="mainMark">
                T1.MAIN_MARK like concat(#mainMark#, '%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="expRequestNo">
                T1.EXP_REQUEST_NO like concat(#expRequestNo#, '%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="lastTrRcvDtFrom">
                T1.LAST_TR_RCV_DT <![CDATA[ >= ]]> #lastTrRcvDtFrom#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="lastTrRcvDtTo">
                T1.LAST_TR_RCV_DT <![CDATA[ < ]]> #lastTrRcvDtTo# + 1
            </isNotEmpty>
            and T1.PLTZ_STATUS = '10'
            and T1.STG_INSTR_ITEM_FLG = 'Y'
            and T1.LAST_TR_STATUS != '20'
            and W1.DSC_ID(+) = #loginUserDscId#
            and T1.SHIPPER_CD
                in (
                    select COMP_CD
                    from TM_NXS_COMP
                    where SERVER_ID = #serverId#
                )
            <!-- If no RegisterAll -->
            <!-- RegisterAllなしの場合 -->
            <isNotEmpty property="userAuthList" prepend="and">
                exists (
                    select 'x'
                    from
                        TT_PLTZ_ITEM A1
                    where 
                            T1.MAIN_MARK = A1.MAIN_MARK
                        and A1.PLNT_CD is not NULL
                    having
                        min(
                            case
                                <iterate property="userAuthList">
                                    when T1.SHIPPER_CD = #userAuthList[].authMgtComp# and A1.PLNT_CD = #userAuthList[].procMfgDivCd#
                                        then #userAuthList[].authority#
                                </iterate>
                                else '0'
                            end
                        ) <![CDATA[ >= ]]> '2'
                )
            </isNotEmpty>
    </sql>
    <sql id="Orderby_CreateSearch">
        order by
                T1.LOADING_CD asc
            ,   T1.SHIP_TO_CD asc
            ,   T1.DNGR_ITEM_FLG asc
            ,   T1.MAIN_MARK desc
    </sql>

    <!-- Search SQL statement (Main / Search - Count of staging instruction) -->
    <!-- 検索 SQL文 (Create / パレタイズ件数) -->
    <select id="SearchCountForPagingOnCreateSearch" parameterClass="W4001PltzCriteriaDomain" resultClass="java.lang.Integer">
        <include refid="Select_Count_CreateSearch" />
        <include refid="From_CreateSearch" />
        <include refid="Where_CreateSearch" />
    </select>

    <!-- Search SQL statement (Main / Search - Palletize search) -->
    <!-- 検索 SQL文 (Create / パレタイズ検索) -->
    <select id="SearchForPagingOnCreateSearch" parameterClass="W4001PltzCriteriaDomain" resultMap="W4001PltzDomain_SearchForPagingOnCreateSearch">
        <include refid="Paging_Begin" />
        <include refid="Select_CreateSearch" />
        <include refid="From_CreateSearch" />
        <include refid="Where_CreateSearch" />
        <include refid="Orderby_CreateSearch" />
        <include refid="Paging_End" />
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Register / Search - from Main                      -->
    <!-- 荷揃え指示Register / Search - from Main                                -->
    <!-- ====================================================================== -->

    <sql id="Select_Count_RegisterFromMainSearch">
        select /* SqlMap-W4001StgInstr.SearchCountOnRegisterInitByFromMain */
            count(ROWNUM)
    </sql>

    <sql id="Select_RegisterFromMainSearch">
        select /* SqlMap-W4001StgInstr.SearchOnRegisterInitByFromMain */
                T1.STG_INSTR_NO
            ,   T1.WH_COMP_CD
            ,   T1.WH_CD
            ,   T1.TRNS_CD
            ,   T1.CONTAINER_SORTING_KEY
            ,   T1.CONTAINER_LOOSE_TYP
            ,   T1.CUSTOM_TIMING_TYP
            ,   T1.SHIPPER_CD
            ,   T1.STG_INSTR_STATUS
            ,   T1.ETD
            ,   T1.CARRIER_COMP_CD
            ,   T1.PKG_QTY
            ,   T1.GROSS_WEIGHT
            ,   T1.WEIGHT_UNIT
            ,   T1.VOLUME
            ,   T1.VOLUME_UNIT
            ,   T1.STG_INSTR_DT
            ,   T1.STG_INSTR_ISSUER_NM
            ,   T1.WORKED_DT
            ,   T1.WORKED_ISSUER_NM
            ,   T1.COM_UPDATE_TIMESTAMP
            ,   M1.VALUE
            ,   T2.MAIN_MARK
            ,   T2.SHIP_TO_CD
            ,   T2.WEIGHT_UNIT PLTZ_WEIGHT_UNIT
            ,   T2.GROSS_WEIGHT PLTZ_GROSS_WEIGHT
            ,   T2.VOLUME_UNIT PLTZ_VOLUME_UNIT
            ,   T2.VOLUME PLTZ_VOLUME
            ,   T2.DUE_DT
            ,   T2.LOADING_CD
            ,   T2.DNGR_ITEM_FLG
            ,   T2.LAST_TR_RCV_DT
            ,   T2.EXP_REQUEST_NO
            ,   T2.COM_UPDATE_TIMESTAMP PLTZ_COM_UPDATE_TIMESTAMP
            <!-- Have an authority other than of RegiterAll, BrowseAll -->
            <!-- RegiterAll、BrowseAll以外の権限を保持している場合 -->
            <isNotEmpty property="userAuthList" prepend=",">
                (
                    select
                        min(
                            case
                                <iterate property="userAuthList">
                                    when T2.SHIPPER_CD = #userAuthList[].authMgtComp# and A1.PLNT_CD = #userAuthList[].procMfgDivCd#
                                        then #userAuthList[].authority#
                                </iterate>
                                else '0'
                            end
                        )
                    from
                        TT_PLTZ_ITEM A1
                    where
                            T2.MAIN_MARK = A1.MAIN_MARK
                        and A1.PLNT_CD is not NULL
                ) AUTH
            </isNotEmpty>
            <!-- If only RegiterAll, BrowseAll -->
            <!-- RegiterAll、BrowseAllのみの場合 -->
            <isEmpty property="userAuthList" prepend=",">
                NULL AUTH
            </isEmpty>
    </sql>
    <sql id="From_RegisterFromMainSearch">
        from
                TT_STG_INSTR T1
            ,   TT_PLTZ T2
            ,   TM_CD M1
    </sql>
    <sql id="Where_RegisterFromMainSearch">
        where
                T1.STG_INSTR_NO = T2.STG_INSTR_NO
            and T1.WORKED_METH_TYP = M1.CD(+)
            and T1.STG_INSTR_NO = #stgInstrNo#
            and M1.CD_TYP(+) = '46'
            and M1.LNG_CD(+) = #languageCd#
            and T2.SHIPPER_CD
                in (
                    select COMP_CD
                    from TM_NXS_COMP
                    where SERVER_ID = #serverId#
                )
    </sql>
    <sql id="Orderby_RegisterFromMainSearch">
        order by
                T2.LOADING_CD asc
            ,   T2.SHIP_TO_CD asc
            ,   T2.DNGR_ITEM_FLG asc
            ,   T2.MAIN_MARK desc
    </sql>

    <!-- Search SQL statement (Register / Init - from Main Count of palletize) -->
    <!-- 検索 SQL文 (Register / Init - from Main パレタイズ件数) -->
    <select id="SearchCountOnRegisterInitByFromMain" parameterClass="W4001StgInstrCriteriaDomain" resultClass="java.lang.Integer">
        <include refid="Select_Count_RegisterFromMainSearch" />
        <include refid="From_RegisterFromMainSearch" />
        <include refid="Where_RegisterFromMainSearch" />
    </select>

    <!-- Search SQL statement (Register / Init - from Main Search palletize) -->
    <!-- 検索 SQL文 (Register / Init - from Main パレタイズ検索) -->
    <select id="SearchOnRegisterInitByFromMain" parameterClass="W4001StgInstrCriteriaDomain" resultMap="W4001StgInstrDomain_SearchOnRegisterInit">
        <include refid="Select_RegisterFromMainSearch" />
        <include refid="From_RegisterFromMainSearch" />
        <include refid="Where_RegisterFromMainSearch" />
        <include refid="Orderby_RegisterFromMainSearch" />
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Register / Search - from Create                    -->
    <!-- 荷揃え指示Register / Search - from Create                              -->
    <!-- ====================================================================== -->

    <!-- Search SQL statement (Register / Search - from Create Search palletize) -->
    <!-- 検索 SQL文 (Register / Search - from Create パレタイズ検索) -->
    <select id="SearchOnRegisterInitByFromCreate" parameterClass="W4001StgInstrCriteriaDomain" resultMap="W4001PltzDomain_SearchOnRegisterInit">
        select /* SqlMap-W4001StgInstr.SearchOnRegisterInitByFromCreate */
                T1.MAIN_MARK
            ,   T1.SHIP_TO_CD
            ,   T1.WEIGHT_UNIT PLTZ_WEIGHT_UNIT
            ,   T1.GROSS_WEIGHT PLTZ_GROSS_WEIGHT
            ,   T1.VOLUME_UNIT PLTZ_VOLUME_UNIT
            ,   T1.VOLUME PLTZ_VOLUME
            ,   T1.DUE_DT
            ,   T1.LOADING_CD
            ,   T1.DNGR_ITEM_FLG
            ,   T1.LAST_TR_RCV_DT
            ,   T1.EXP_REQUEST_NO
            ,   T1.COM_UPDATE_TIMESTAMP PLTZ_COM_UPDATE_TIMESTAMP
            ,   NULL AUTH
        from
                TW_STG_INSTR W1
            ,   TT_PLTZ T1
        where
                W1.MAIN_MARK = T1.MAIN_MARK
            and W1.DSC_ID = #loginUserDscId#
        order by
                T1.LOADING_CD asc
            ,   T1.SHIP_TO_CD asc
            ,   T1.DNGR_ITEM_FLG asc
            ,   T1.MAIN_MARK desc
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Create / Update - Summary of Ship to code of work  -->
    <!-- 荷揃え指示Create / Update - ワークのShip to codeのサマリ取得           -->
    <!-- ====================================================================== -->

    <!-- 検索 SQL文 (Create / Update - ワークのShip to codeのサマリ取得) -->
    <select id="SearchTwStgInstrByShipToSummary" resultClass="java.lang.String">
        select distinct  /* SqlMap-W4001StgInstr.SearchTwStgInstrByShipToSummary */
            T1.SHIP_TO_CD
        from
            TW_STG_INSTR W1,
            TT_PLTZ T1
        where
            W1.MAIN_MARK = T1.MAIN_MARK
            and W1.DSC_ID = #value#
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Register / Init - from Create Weight summary of weight per unit -->
    <!-- 荷揃え指示Register / Init - from Create 重量単位ごとの重量サマリ取得   -->
    <!-- ====================================================================== -->

    <!-- Search SQL statement (Register / Init - from Create Weight summary of weight per unit) -->
    <!-- 検索 SQL文 (Register / Init - from Create 重量単位ごとの重量サマリ取得) -->
    <select id="SearchOnRegisterInitByWeightSummary" resultMap="W4001PltzDomain_SearchOnRegisterInitByWeightSummary">
        select /* SqlMap-W4001StgInstr.SearchOnRegisterInitByWeightSummary */
            T1.WEIGHT_UNIT
            ,sum(T1.GROSS_WEIGHT) GROSS_WEIGHT
        from
            TW_STG_INSTR W1
            ,TT_PLTZ T1
        where
            W1.MAIN_MARK = T1.MAIN_MARK
            and W1.DSC_ID = #value#
        group by
            T1.WEIGHT_UNIT
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Register / Init - from Create Summary volume of volume per unit -->
    <!-- 荷揃え指示Register / Init - from Create 容積単位ごとの容積サマリ取得   -->
    <!-- ====================================================================== -->

    <!-- Search SQL statement (Register / Init - from Create Summary volume of volume per unit) -->
    <!-- 検索 SQL文 (Register / Init - from Create 容積単位ごとの容積サマリ取得) -->
    <select id="SearchOnRegisterInitByVolumeSummary" resultMap="W4001PltzDomain_SearchOnRegisterInitByVolumeSummary">
        select /* SqlMap-W4001StgInstr.SearchOnRegisterInitByVolumeSummary */
            T1.VOLUME_UNIT
            ,sum(T1.VOLUME) VOLUME
        from
            TW_STG_INSTR W1
            ,TT_PLTZ T1
        where
            W1.MAIN_MARK = T1.MAIN_MARK
            and W1.DSC_ID = #value#
        group by
            T1.VOLUME_UNIT
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Register / Register - Palletize lock & check       -->
    <!-- 荷揃え指示Register / Register - パレタイズロック&チェック用            -->
    <!-- ====================================================================== -->

    <!-- Search SQL statement (Register / Register - Palletize lock & check) -->
    <!-- 検索 SQL文 (Register / Register - パレタイズロック&チェック用) -->
    <select id="LockTtPltzByMainMarkListNoWait" parameterClass="java.util.List" resultMap="W4001PltzDomain_LockTtPltzByMainMarkListNoWait">
        select /* SqlMap-W4001StgInstr.LockTtPltzByMainMarkListNoWait */
                T1.MAIN_MARK
            ,   T1.PLTZ_STATUS
            ,   T1.LAST_TR_STATUS
            ,   T2.PLTZ_INSTR_STATUS
        from
            TT_PLTZ T1
            ,TT_PLTZ_INSTR T2
        where
            T1.MAIN_MARK
                in (
                    <iterate conjunction=",">
                        #[]#
                    </iterate>
                )
            and T1.PLTZ_INSTR_NO = T2.PLTZ_INSTR_NO(+)
        order by
                T1.LOADING_CD asc
            ,   T1.SHIP_TO_CD asc
            ,   T1.DNGR_ITEM_FLG asc
            ,   T1.MAIN_MARK desc
        for update nowait
    </select>

    <!-- ====================================================================== -->
    <!-- Staging instruction Register / Register - Check for export request unit -->
    <!-- 荷揃え指示Register / Register - 輸出依頼単位のチェック用               -->
    <!-- ====================================================================== -->

    <!-- Search SQL statement (Register / Register - Check for export request unit) -->
    <!-- 検索 SQL文 (Register / Register - 輸出依頼単位のチェック用) -->
    <select id="SearchTtPltzByExpReq" parameterClass="java.lang.String" resultMap="W4001PltzDomain_SearchTtPltzByExpReq">
        select /* SqlMap-W4001StgInstr.SearchTtPltzByExpReq */
                T1.EXP_REQUEST_NO
            ,   min(T1.EXP_REQUEST_ALL_CML_ISSUED_FLG) EXP_REQUEST_ALL_CML_ISSUED_FLG
            ,   min(decode(W1.MAIN_MARK, NULL, 'N', 'Y')) CREATE_FLG
        from
                TT_PLTZ T1
            ,   TW_STG_INSTR W1
        where
            T1.EXP_REQUEST_NO in (
                select distinct
                        EXP_REQUEST_NO
                from
                        TW_STG_INSTR W1
                    ,   TT_PLTZ T1
                where
                        W1.MAIN_MARK = T1.MAIN_MARK
                    and W1.DSC_ID = #value#
                    and T1.CML_TYP = '3'
                    and T1.SPLIT_SHIPPING_NG_FLG = 'Y'
            )
            and T1.MAIN_MARK = W1.MAIN_MARK(+)
            and W1.DSC_ID(+) = #value#
            and (
                    T1.EXP_REQUEST_ALL_CML_ISSUED_FLG = 'N'
                or  W1.MAIN_MARK is NULL
            )
        group by
            T1.EXP_REQUEST_NO
        order by
            T1.EXP_REQUEST_NO
    </select>

</sqlMap>
