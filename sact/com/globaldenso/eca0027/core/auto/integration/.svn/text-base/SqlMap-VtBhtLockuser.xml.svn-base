<?xml version="1.0" encoding="UTF-8" ?>
<!-- $Revision: 5759 $ : Generated by SACT ver.1.0.1 at 2014/03/07 14:20:24 -->
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="VtBhtLockuser">

    <!-- Domainの別名定義 -->
    <!-- Domain -->
    <typeAlias alias="VtBhtLockuserDomain"
        type="com.globaldenso.eca0027.core.auto.business.domain.VtBhtLockuserDomain" />
    <!-- CriteriaDomain -->
    <typeAlias alias="VtBhtLockuserCriteriaDomain"
        type="com.globaldenso.eca0027.core.auto.business.domain.criteria.VtBhtLockuserCriteriaDomain" />


    <!-- 検索結果をMapで受け取る -->
    <resultMap id="VtBhtLockuser" class="VtBhtLockuserDomain">
        <result property="dscId" column="DSC_ID" />
        <result property="role" column="ROLE" />
        <result property="authMgtComp" column="AUTH_MGT_COMP" />
        <result property="authDataTyp" column="AUTH_DATA_TYP" />
        <result property="authDataFrom" column="AUTH_DATA_FROM" />
        <result property="authDataTo" column="AUTH_DATA_TO" />
    </resultMap>


    <!-- 汎用 項目 -->
    <sql id="Cols">
             DSC_ID
            ,ROLE
            ,AUTH_MGT_COMP
            ,AUTH_DATA_TYP
            ,AUTH_DATA_FROM
            ,AUTH_DATA_TO
    </sql>


    <!-- 汎用 SELECT句 -->
    <sql id="Select">
        select
        <include refid="Cols" />
        from VT_BHT_LOCKUSER
    </sql>

    <!-- 汎用 SELECT句（ページング用） -->
    <sql id="SelectForPaging">
        select
        <include refid="Cols" />
            ,row_number() over (<isNotEmpty property="preferredOrder">order by $preferredOrder$</isNotEmpty><isEmpty property="preferredOrder">order by ROWNUM</isEmpty>) ROW_NUM
        from VT_BHT_LOCKUSER
    </sql>

    <!-- 汎用 Where句（全項目） -->
    <sql id="WhereCondition">
        <dynamic prepend="where">
            <isNotEmpty prepend="and" property="dscId">
                DSC_ID = #dscId#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="role">
                ROLE = #role#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authMgtComp">
                AUTH_MGT_COMP = #authMgtComp#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataTyp">
                AUTH_DATA_TYP = #authDataTyp#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataFrom">
                AUTH_DATA_FROM = #authDataFrom#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataTo">
                AUTH_DATA_TO = #authDataTo#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="dscIdGreaterThan">
                DSC_ID <![CDATA[>]]> #dscIdGreaterThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="dscIdGreaterThanEqual">
                DSC_ID <![CDATA[>=]]> #dscIdGreaterThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="dscIdLessThan">
                DSC_ID <![CDATA[<]]> #dscIdLessThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="dscIdLessThanEqual">
                DSC_ID <![CDATA[<=]]> #dscIdLessThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="dscIdLikeFront">
                DSC_ID LIKE CONCAT(#dscIdLikeFront#,'%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="roleGreaterThan">
                ROLE <![CDATA[>]]> #roleGreaterThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="roleGreaterThanEqual">
                ROLE <![CDATA[>=]]> #roleGreaterThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="roleLessThan">
                ROLE <![CDATA[<]]> #roleLessThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="roleLessThanEqual">
                ROLE <![CDATA[<=]]> #roleLessThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="roleLikeFront">
                ROLE LIKE CONCAT(#roleLikeFront#,'%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authMgtCompGreaterThan">
                AUTH_MGT_COMP <![CDATA[>]]> #authMgtCompGreaterThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authMgtCompGreaterThanEqual">
                AUTH_MGT_COMP <![CDATA[>=]]> #authMgtCompGreaterThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authMgtCompLessThan">
                AUTH_MGT_COMP <![CDATA[<]]> #authMgtCompLessThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authMgtCompLessThanEqual">
                AUTH_MGT_COMP <![CDATA[<=]]> #authMgtCompLessThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authMgtCompLikeFront">
                AUTH_MGT_COMP LIKE CONCAT(#authMgtCompLikeFront#,'%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataTypGreaterThan">
                AUTH_DATA_TYP <![CDATA[>]]> #authDataTypGreaterThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataTypGreaterThanEqual">
                AUTH_DATA_TYP <![CDATA[>=]]> #authDataTypGreaterThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataTypLessThan">
                AUTH_DATA_TYP <![CDATA[<]]> #authDataTypLessThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataTypLessThanEqual">
                AUTH_DATA_TYP <![CDATA[<=]]> #authDataTypLessThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataTypLikeFront">
                AUTH_DATA_TYP LIKE CONCAT(#authDataTypLikeFront#,'%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataFromGreaterThan">
                AUTH_DATA_FROM <![CDATA[>]]> #authDataFromGreaterThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataFromGreaterThanEqual">
                AUTH_DATA_FROM <![CDATA[>=]]> #authDataFromGreaterThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataFromLessThan">
                AUTH_DATA_FROM <![CDATA[<]]> #authDataFromLessThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataFromLessThanEqual">
                AUTH_DATA_FROM <![CDATA[<=]]> #authDataFromLessThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataFromLikeFront">
                AUTH_DATA_FROM LIKE CONCAT(#authDataFromLikeFront#,'%')
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataToGreaterThan">
                AUTH_DATA_TO <![CDATA[>]]> #authDataToGreaterThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataToGreaterThanEqual">
                AUTH_DATA_TO <![CDATA[>=]]> #authDataToGreaterThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataToLessThan">
                AUTH_DATA_TO <![CDATA[<]]> #authDataToLessThan#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataToLessThanEqual">
                AUTH_DATA_TO <![CDATA[<=]]> #authDataToLessThanEqual#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="authDataToLikeFront">
                AUTH_DATA_TO LIKE CONCAT(#authDataToLikeFront#,'%')
            </isNotEmpty>
        </dynamic>
    </sql>

    <!-- 汎用 OrderBy句 -->
    <sql id="SortKeys">
        <isNotEmpty property="preferredOrder">
            order by $preferredOrder$
        </isNotEmpty>
        <isEmpty property="preferredOrder">
            
        </isEmpty>
    </sql>

    <!-- 検索 SQL文（任意条件） -->
    <select id="SearchByCondition" resultMap="VtBhtLockuser"
        parameterClass="VtBhtLockuserCriteriaDomain">
        <include refid="Select" />
        /* SqlMap-VtBhtLockuser.SearchByCondition */
        <include refid="WhereCondition" />
        <include refid="SortKeys" />
    </select>

    <!-- 検索 SQL文（任意条件、ページング用） -->
    <select id="SearchByConditionForPaging" resultMap="VtBhtLockuser"
        parameterClass="VtBhtLockuserCriteriaDomain">
        select 
            <include refid="Cols" />
            /* SqlMap-VtBhtLockuser.SearchByConditionForPaging */
            from (
                <include refid="SelectForPaging" />
                <include refid="WhereCondition" />
            ) where ROW_NUM between #rowNumFrom# and #rowNumTo#
    </select>

    <!-- 検索 SQL文（任意条件 件数取得） -->
    <select id="SearchCount" resultClass="java.lang.Integer"
        parameterClass="VtBhtLockuserCriteriaDomain">
        select count(rownum) 
        from VT_BHT_LOCKUSER
        /* SqlMap-VtBhtLockuser.SearchCount */
        <include refid="WhereCondition" />
    </select>


</sqlMap>
